version: '3.5'

services:
  snowface-nginx:
    image: nginx
    container_name: snowface-nginx
    volumes:
      - ./nginx.conf:/tmp/nginx.conf # path to local nginx conf.
      - ../snowface-extra/certs/server_crt_file.crt:/nginx/server_crt_file.crt # path to local crt.
      - ../snowface-extra/certs/server_crt_file.key:/nginx/server_crt_file.key # path to local key.
    environment:
      - SERVER_A_ADDR=localhost # change to real server A ip.
      - SERVER_B_ADDR=localhost # change to real server B ip.
      - B_PORT=5000
      - A_PORT=5001
      - WEBHOOK_ADDR=https://localhost:1443/v1w/auth/processFaceRecognitionResult # change to real server B ip.
      - WEBHOOK_ALLOW_SRC=all
      - METRICS_PASSWORD=metrics-password
    command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && echo -n metrics:$$(openssl passwd -apr1 $$METRICS_PASSWORD) >> /.metrics.htpasswd && nginx -g 'daemon off;'"
    network_mode: "host"

  snowface-liveness:
    image: snowface-liveness
    build:
      context: ${SNOWFACE_PATH:-.}
      dockerfile: Dockerfile
      args:
        SNOWFACE_PORT: 5001 # temporary hack to run both containers on same machine, not needed for staging / prod
        WORKERS: 4 # workers count in gunicorn (=support of concurrent requests at the same time) = vcpu/4, or (videomem/2300 - 2)
      #dockerfile: Dockerfile.gpu
    container_name: snowface-liveness
    volumes:
      - $PWD/.firebase-auth.json:/.firebase-auth.json
    environment:
      # auth
      JWT_SECRET: bogus # required, must be the same value as on other backend apps
      AUTH_CREDENTIALS_FILE_PATH: /.firebase-auth.json # to work with firebase tokens, must be the same value as on other backend apps or GOOGLE_APPLICATION_CREDENTIALS
      # Milvus connection setup
      # to enable TLS change here to https and cnange security.tlsMode to 1 into milvus.yaml
      MILVUS_URI: http://localhost:19530 #required, change to IP at the server B.
      MILVUS_USER: root #default = root
      # to change run milvus and change it from client https://github.com/milvus-io/milvus/discussions/22736
      # like docker run python:3.8 bash -c "pip3 install pymilvus; python3 -c \"from pymilvus import utility; from pymilvus import connections; connections.connect(host='http://localhost',port='19530',user='root',password='Milvus');utility.reset_password('root', 'Milvus', 'new_password')\""
      MILVUS_PASSWORD: Milvus # default = Milvus
      REDIS_URI: redis://:redis-password@localhost:6379/0
      LIMIT_RATE: 30 # seconds, staging value
      LIMIT_RATE_NEGATIVE: 60 # second, staging value
      SIMILARITY_SERVER: http://127.0.0.1:5000/ # change to server B address.
      TOTAL_BEST_PICTURES: 7
      INITIAL_EMOTION_COUNT: 10
      MAX_EMOTION_COUNT: 10
      MAX_CONTENT_LENGTH: 1000000 # 1 Mb
      IMG_STORAGE_PATH: /images # Change to the path where images will be stored.
      METRICS_PASSWORD: metrics-password
      MIGRATE_PHONE_LOGIN_CALLBACK_URL: https://localhost:1443/v1w/auth/sendSignInLinkToEmail #webhook to eskimo endpoint.
    network_mode: "host"

#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: 1
#              capabilities: [ gpu ]
