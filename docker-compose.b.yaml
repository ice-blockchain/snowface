version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-..}/snowface-volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    network_mode: "host"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2379/health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    network_mode: "host"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-..}/snowface-volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  # Single instance, but we can also deploy a cluster with k8s https://milvus.io/docs/install_cluster-milvusoperator.md
  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.0
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: localhost:2379
      MINIO_ADDRESS: localhost:9000
      MINIO_ACCESSKEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      COMMON_SECURITY_AUTHORIZATION_ENABLED: "true"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-..}/snowface-volumes/milvus:/var/lib/milvus
     # - ./milvus.yaml:/milvus/configs/milvus.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    network_mode: "host"
    depends_on:
      - "etcd"
      - "minio"
  snowface-recognition:
    image: snowface-recognition
    build:
      context: ${SNOWFACE_PATH:-.}
      dockerfile: Dockerfile
    container_name: snowface-recognition
    environment:
      # auth
      JWT_SECRET: bogus # required, must be the same value as on other backend apps
      GOOGLE_APPLICATION_CREDENTIALS: "{}" # to work with firebase tokens, must be the same value as on other backend apps
      GCP_FIREBASE_AUTH_API_KEY: bogus # to work with firebase tokens, must be the same value as on other backend apps
      # minio connection setup
      MINIO_URI: localhost:9000 # required
      MINIO_ACCESS_KEY: minioadmin # must match with minio container
      MINIO_SECRET_KEY: minioadmin # must match with minio container
      # to enable TLS in minio pass --certs-dir in minio's cmd and put private.key and public.crt there:
      #  https://min.io/docs/minio/linux/operations/network-encryption.html#minio-tls
      MINIO_SSL: "false"
      # Milvus connection setup
      # to enable TLS change here to https and cnange security.tlsMode to 1 into milvus.yaml
      MILVUS_URI: http://localhost:19530 #required
      MILVUS_USER: root #default = root
      # to change run milvus and change it from client https://github.com/milvus-io/milvus/discussions/22736
      # like docker run python:3.8 bash -c "pip3 install pymilvus; python3 -c \"from pymilvus import utility; from pymilvus import connections; connections.connect(host='http://localhost',port='19530',user='root',password='Milvus');utility.reset_password('root', 'Milvus', 'new_password')\""
      MILVUS_PASSWORD: Milvus # default = Milvus
      METADATA_UPDATED_CALLBACK_URL: http://localhost:5000 #webhook to freezer-refrigerant endpoint, if emptty / not set = no webhook called
      METADATA_UPDATED_SECRET: secret # secret token matching with freezer-refrigerant
      PRIMARY_PHOTO_ERROR_LIMIT: 10/minute # if empty/not set = no limit
      MAX_UPLOAD_CONTENT_LENGTH: 16000000 #16Mb
      WORKERS: 4 # workers count in gunicorn (=support of concurrent requests at the same time), it works better with 4cpu cores / worker or 2300Mb of videomem / worker
    depends_on:
      - "milvus-standalone"
      - "minio"
    network_mode: "host"